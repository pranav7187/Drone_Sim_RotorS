<launch>
    <arg name="world_name" default="basic"/>
    <arg name="enable_logging" default="false"/>
    <arg name="enable_ground_truth" default="true"/>
    <arg name="enable_mavlink_interface" default="false"/>
    <arg name="mav_name" default="hummingbird" />
    <arg name="payload_name" default="payload" />
    <arg name="model" default="$(find payload_description)/urdf/payload2.urdf.xacro"/>
  
    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="paused" value="true"/>
      <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world"/>
      <!-- <arg name="debug" value="true"/> -->
     
      <!-- <arg name="gui" value="false"/> -->
    </include>
  
    <group ns="$(arg mav_name)1">
      <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
        <arg name="mav_name" value="$(arg mav_name)" />
        <arg name="namespace" value="$(arg mav_name)1" />
        <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
        <arg name="enable_logging" value="$(arg enable_logging)" />
        <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
        <arg name="log_file" value="$(arg mav_name)1"/>
        <arg name="y" value="-0.5"/>
        <arg name="x" value="0.5"/>
        <arg name="z" value="0.75"/>
      </include>
      <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
        <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
        <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
        <remap from="odometry" to="odometry_sensor1/odometry" />
      </node>
     
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    </group>

    <group ns="$(arg payload_name)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg model)'" />
        <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen" args="-unpause -urdf -model robot -param robot_description"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
      </group>
</launch>